//=============================================================================
//
// スコア処理 [score.cpp]
// Author : NAGAOKA YUKI
//
//=============================================================================
#include "main.h"
#include "score.h"
#include "renderer.h"
#include "manager.h"
#include "number.h"

///////////////////////////////////////////////
//
//		マクロ定義
//
////////////////////////////////////////////////
#define NUMBER_POS_X			(750.0f)
#define NUMBER_POS_Y			(0.0f)
#define NUMBER_WIDTH			(50.0f)
#define NUMBER_HEIGHT			(50.0f)

///////////////////////////////////////////////
//
//		プロトタイプ宣言
//
////////////////////////////////////////////////

///////////////////////////////////////////////
//
//		グローバル変数
//
////////////////////////////////////////////////

///////////////////////////////////////////////
//
//		コンストラクタ
//
////////////////////////////////////////////////
CScore *CScore::Create(void)
{
	CScore *pScore;
	pScore = new CScore(7);
	pScore->Init();
	return pScore;
}

///////////////////////////////////////////////
//
//		コンストラクタ
//
////////////////////////////////////////////////
CScore::CScore(int Priority):CScene(Priority)
{
	for(int i = 0; i < SCORE_MAX; i++)
	{
		m_apNumber[i] = NULL;
	}
	m_pos = D3DXVECTOR3(0.0f, 0.0f, 0.0f);
	m_nScore = 0;
}
///////////////////////////////////////////////
//
//		デストラクタ
//
////////////////////////////////////////////////
CScore::~CScore()
{
	
}

///////////////////////////////////////////////
//
//		初期化処理
//
////////////////////////////////////////////////
void CScore::Init(void)
{
	for(int i = 0; i < SCORE_MAX; i++)
	{
		m_apNumber[i] = CNumber::Create();
		m_apNumber[i]->SetPosition(D3DXVECTOR3(NUMBER_POS_X - (NUMBER_WIDTH * i), NUMBER_POS_Y, 0.0f));
		m_apNumber[i]->SetSize(D3DXVECTOR2(NUMBER_WIDTH, NUMBER_HEIGHT));
	}
}

///////////////////////////////////////////////
//
//		終了処理
//
////////////////////////////////////////////////
void CScore::Uninit(void)
{
	for(int i = 0; i < SCORE_MAX; i ++)
	{
		m_apNumber[i]->Uninit();
		delete m_apNumber[i];
		m_apNumber[i] = NULL;
	}
}

///////////////////////////////////////////////
//
//		更新処理
//
////////////////////////////////////////////////
void CScore::Update(void)
{
	int number = 0;
	int value = m_nScore;

	for(int i = 0; i < SCORE_MAX; i ++)
	{
		number = value %10;
		value /= 10;
		m_apNumber[i]->SetNumber(number);
		m_apNumber[i]->Update();
	}
}

///////////////////////////////////////////////
//
//		描画処理
//
////////////////////////////////////////////////
void CScore::Draw(void)
{
	for(int i = 0; i < SCORE_MAX; i ++)
	{
		m_apNumber[i]->Draw();
	}
}

///////////////////////////////////////////////
//
//		座標取得処理
//
////////////////////////////////////////////////
int CScore::GetScore(void)
{
	return m_nScore;
}
///////////////////////////////////////////////
//
//		スコア加算処理
//
////////////////////////////////////////////////
void CScore::AddScore(int nValue)
{
	m_nScore += nValue;
}

