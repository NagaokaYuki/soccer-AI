/*=======================================================================

	ステート処理 [state.h]

												長岡佑樹

	状態のインタフェースを定義する抽象基本クラス

=========================================================================*/
#ifndef STATE_H
#define STATE_H

struct Telegram;

/////////////////////////////////////////////////////////
//
//	テンプレート
//
/////////////////////////////////////////////////////////
template <class entity_type>

/////////////////////////////////////////////////////////
//
//	Stateクラス
//
/////////////////////////////////////////////////////////
class State
{
public:
	
	virtual ~State(){}

	// 状態に入ると実行
	virtual void Enter(entity_type*)=0;
	
	// 状態の通常の更新関数
	virtual void Execute(entity_type*)=0;
	
	// 状態が終了すると実行
	virtual void Exit(entity_type*)=0;
	
	// エージェントがメッセージディスパッチャーからメッセージを受け取ったら実行
	virtual bool OnMessage(entity_type*, const Telegram&)=0;

};

#endif